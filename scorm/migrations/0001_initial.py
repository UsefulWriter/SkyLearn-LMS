# Generated by Django 4.2.17 on 2025-08-07 22:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import scorm.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("course", "0004_alter_course_code_alter_course_credit_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ScormAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("last_accessed", models.DateTimeField(auto_now=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "lesson_status",
                    models.CharField(
                        choices=[
                            ("browsed", "Browsed"),
                            ("incomplete", "Incomplete"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("passed", "Passed"),
                            ("not_attempted", "Not Attempted"),
                        ],
                        default="not_attempted",
                        max_length=20,
                    ),
                ),
                ("score_raw", models.FloatField(blank=True, null=True)),
                ("score_min", models.FloatField(default=0)),
                ("score_max", models.FloatField(default=100)),
                ("score_scaled", models.FloatField(blank=True, null=True)),
                ("progress_measure", models.FloatField(default=0)),
                ("total_time", models.DurationField(blank=True, null=True)),
                ("session_time", models.DurationField(blank=True, null=True)),
                ("suspend_data", models.TextField(blank=True)),
                ("lesson_location", models.CharField(blank=True, max_length=255)),
                ("exit_mode", models.CharField(blank=True, max_length=20)),
                ("credit", models.CharField(default="credit", max_length=20)),
                ("entry", models.CharField(default="ab-initio", max_length=20)),
            ],
            options={
                "verbose_name": "SCORM Attempt",
                "verbose_name_plural": "SCORM Attempts",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="ScormPackage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "version",
                    models.CharField(
                        choices=[
                            ("1.2", "SCORM 1.2"),
                            ("2004", "SCORM 2004 (3rd/4th Edition)"),
                        ],
                        default="1.2",
                        help_text="SCORM version of the package",
                        max_length=10,
                    ),
                ),
                (
                    "package_file",
                    models.FileField(
                        help_text="SCORM package ZIP file (max 500MB)",
                        upload_to=scorm.models.scorm_package_path,
                        validators=[
                            django.core.validators.FileExtensionValidator(["zip"]),
                            scorm.models.validate_scorm_package,
                        ],
                    ),
                ),
                (
                    "extracted_path",
                    models.CharField(
                        blank=True,
                        help_text="Path where the package is extracted",
                        max_length=500,
                    ),
                ),
                (
                    "entry_point",
                    models.CharField(
                        blank=True, help_text="Launch URL from manifest", max_length=255
                    ),
                ),
                (
                    "manifest_data",
                    models.JSONField(
                        blank=True, default=dict, help_text="Parsed manifest data"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Processing"),
                            ("processing", "Processing"),
                            ("ready", "Ready"),
                            ("error", "Error"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                (
                    "allow_multiple_attempts",
                    models.BooleanField(
                        default=True,
                        help_text="Allow users to attempt this package multiple times",
                    ),
                ),
                (
                    "passing_score",
                    models.IntegerField(
                        default=70, help_text="Minimum score to pass (percentage)"
                    ),
                ),
                (
                    "weight_in_course",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Weight of this SCORM package in overall course grade (0-100%)",
                        max_digits=5,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scorm_packages",
                        to="course.course",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="uploaded_scorm_packages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "SCORM Package",
                "verbose_name_plural": "SCORM Packages",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ScormInteraction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("interaction_id", models.CharField(max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("true-false", "True/False"),
                            ("choice", "Multiple Choice"),
                            ("fill-in", "Fill In"),
                            ("long-fill-in", "Long Fill In"),
                            ("matching", "Matching"),
                            ("performance", "Performance"),
                            ("sequencing", "Sequencing"),
                            ("likert", "Likert"),
                            ("numeric", "Numeric"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("correct_responses", models.JSONField(default=list)),
                ("learner_response", models.TextField()),
                (
                    "result",
                    models.CharField(
                        choices=[
                            ("correct", "Correct"),
                            ("incorrect", "Incorrect"),
                            ("unanticipated", "Unanticipated"),
                            ("neutral", "Neutral"),
                        ],
                        max_length=20,
                    ),
                ),
                ("weighting", models.FloatField(default=1.0)),
                ("latency", models.DurationField(blank=True, null=True)),
                ("description", models.TextField(blank=True)),
                ("objectives", models.JSONField(default=list)),
                (
                    "attempt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interactions",
                        to="scorm.scormattempt",
                    ),
                ),
            ],
            options={
                "verbose_name": "SCORM Interaction",
                "verbose_name_plural": "SCORM Interactions",
                "ordering": ["timestamp"],
            },
        ),
        migrations.AddField(
            model_name="scormattempt",
            name="package",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attempts",
                to="scorm.scormpackage",
            ),
        ),
        migrations.AddField(
            model_name="scormattempt",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="scorm_attempts",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="ScormObjective",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("objective_id", models.CharField(max_length=255)),
                (
                    "success_status",
                    models.CharField(
                        choices=[
                            ("not_satisfied", "Not Satisfied"),
                            ("satisfied", "Satisfied"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                (
                    "completion_status",
                    models.CharField(
                        choices=[
                            ("browsed", "Browsed"),
                            ("incomplete", "Incomplete"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("passed", "Passed"),
                            ("not_attempted", "Not Attempted"),
                        ],
                        default="not_attempted",
                        max_length=20,
                    ),
                ),
                ("score_raw", models.FloatField(blank=True, null=True)),
                ("score_min", models.FloatField(default=0)),
                ("score_max", models.FloatField(default=100)),
                ("score_scaled", models.FloatField(blank=True, null=True)),
                ("progress_measure", models.FloatField(default=0)),
                ("description", models.TextField(blank=True)),
                (
                    "attempt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="objectives",
                        to="scorm.scormattempt",
                    ),
                ),
            ],
            options={
                "verbose_name": "SCORM Objective",
                "verbose_name_plural": "SCORM Objectives",
                "unique_together": {("attempt", "objective_id")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="scormattempt",
            unique_together={("package", "user", "started_at")},
        ),
    ]
